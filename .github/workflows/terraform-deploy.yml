# Uses GitHub OIDC to assume AWS role for Terraform operations
name: Terraform Deploy

on:
  push:
    branches:
      - develop
      - main
      - master
    paths:
      - terraform/**
      - .github/workflows/terraform-deploy.yml
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment environment"
        required: true
        default: staging
        type: choice
        options:
          - staging
          - production
      image_tag:
        description: "Container image tag to deploy (defaults to <env>-<sha>)"
        required: false
        type: string

jobs:
  plan:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    env:
      TERRAFORM_WORKSPACE: ${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }}
    steps:
      - uses: actions/checkout@v4
      - name: Derive image tag
        run: |
          if [ "${GITHUB_REF_NAME}" = "main" ] || [ "${GITHUB_REF_NAME}" = "master" ]; then
            tag="prod-${GITHUB_SHA::7}"
          else
            tag="staging-${GITHUB_SHA::7}"
          fi
          echo "TF_VAR_app_runner_image_tag=${tag}" >> $GITHUB_ENV
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::654654601496:role/evmarket-github-oidc
          aws-region: us-east-2
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5
      - name: Terraform fmt
        working-directory: terraform
        run: terraform fmt -check
      - name: Terraform init
        working-directory: terraform
        run: terraform init -upgrade
      - name: Select workspace
        working-directory: terraform
        run: |
          terraform workspace select -or-create "$TERRAFORM_WORKSPACE"
      - name: Terraform plan
        working-directory: terraform
        run: terraform plan

  apply:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      TERRAFORM_WORKSPACE: ${{ inputs.environment == 'production' && 'prod' || 'staging' }}
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Derive image tag
        run: |
          if [ -n "${{ inputs.image_tag }}" ]; then
            tag="${{ inputs.image_tag }}"
          elif [ "${{ inputs.environment }}" = "production" ]; then
            tag="prod-${GITHUB_SHA::7}"
          else
            tag="staging-${GITHUB_SHA::7}"
          fi
          echo "TF_VAR_app_runner_image_tag=${tag}" >> $GITHUB_ENV
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::654654601496:role/evmarket-github-oidc
          aws-region: us-east-2
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5
      - name: Terraform fmt
        working-directory: terraform
        run: terraform fmt -check
      - name: Terraform init
        working-directory: terraform
        run: terraform init -upgrade
      - name: Select workspace
        working-directory: terraform
        run: |
          terraform workspace select -or-create "$TERRAFORM_WORKSPACE"
      - name: Terraform plan
        working-directory: terraform
        run: terraform plan
      - name: Terraform apply
        working-directory: terraform
        run: terraform apply -auto-approve
